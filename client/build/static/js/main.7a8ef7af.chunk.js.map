{"version":3,"sources":["screens/Home.js","screens/NewGame.js","components/Board.js","util/minimax.js","screens/LocalMatch.js","screens/OnlineMatchInit.js","screens/JoinMatch.js","components/CopyLogo.js","components/CopyLinkLogo.js","screens/OnlineMatch.js","App.js","index.js"],"names":["Home","props","id","className","to","NewGame","Board","blocks","disabled","onMove","onClick","minimax","origBoard","Array","i","length","minimaxRec","index","newBoard","player","availSpots","filter","ch","winning","score","bestMove","moves","move","push","bestScore","LocalMatch","useState","setBlocks","status","setStatus","gameEnd","end","checkGameEnd","block","alert","console","log","slice","AIMove","OnlineMatchInit","history","useHistory","useEffect","matchID","possible","res","charAt","Math","floor","random","generateID","JoinMatch","input","setInput","onSubmit","event","type","placeholder","required","minLength","maxLength","onChange","target","value","CopyLogo","aria-label","viewBox","fill","stroke","stroke-width","d","CopyLinkLogo","socket","OnlineMatch","match","params","setPlayer","gameState","setGameState","setGameEnd","copied","setCopied","copyToClipboard","txt","ta","document","createElement","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","setTimeout","url","window","location","host","io","query","on","newPlayer","newGameState","message","disconnect","turn","emit","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a8ef7af.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div id=\"Home\" className=\"screen\">\r\n      <h1>Tic Tac Toe WebSockets</h1>\r\n      <em>A Tic Tac Toe game built using WebSockets</em>\r\n\r\n      <div className=\"buttons\">\r\n        <Link className=\"btn big-btn new-match\" to=\"/new\">\r\n          Start New Match\r\n        </Link>\r\n        <Link className=\"btn big-btn join-match\" to=\"/join\">\r\n          Join a Match\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./NewGame.css\";\r\n\r\nfunction NewGame(props) {\r\n  return (\r\n    <div id=\"NewGame\">\r\n      <h1>NewGame</h1>\r\n      <em>\r\n        You can play online with a friend, or locally against THE computer\r\n        (Beware! It is not going to be easy...)\r\n      </em>\r\n\r\n      <div className=\"buttons\">\r\n        <Link className=\"btn big-btn vs-computer\" to=\"/local\">\r\n          VS Computer (Local)\r\n        </Link>\r\n        <Link className=\"btn big-btn vs-player\" to=\"/online\">\r\n          VS Player (Online)\r\n        </Link>\r\n        <Link className=\"btn big-btn back\" to=\"/\">\r\n          Return Home\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewGame;\r\n","import \"./Board.css\";\r\n\r\nfunction Board(props) {\r\n  const { blocks, disabled, onMove } = props;\r\n\r\n  return (\r\n    <div id=\"Board\" className={disabled && \"disabled\"}>\r\n      <button\r\n        className=\"square remove-top-border remove-left-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(0)}\r\n      >\r\n        {blocks[0]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-top-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(1)}\r\n      >\r\n        {blocks[1]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-top-border remove-right-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(2)}\r\n      >\r\n        {blocks[2]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-left-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(3)}\r\n      >\r\n        {blocks[3]}\r\n      </button>\r\n      <button className=\"square\" disabled={disabled} onClick={() => onMove(4)}>\r\n        {blocks[4]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-right-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(5)}\r\n      >\r\n        {blocks[5]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-bottom-border remove-left-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(6)}\r\n      >\r\n        {blocks[6]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-bottom-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(7)}\r\n      >\r\n        {blocks[7]}\r\n      </button>\r\n      <button\r\n        className=\"square remove-bottom-border remove-right-border\"\r\n        disabled={disabled}\r\n        onClick={() => onMove(8)}\r\n      >\r\n        {blocks[8]}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","export default function minimax(blocks) {\r\n  let origBoard = Array(9);\r\n  for (let i = 0; i < blocks.length; ++i)\r\n    origBoard[i] = blocks[i] === \"\" ? i : blocks[i];\r\n\r\n  return minimaxRec(origBoard, \"O\").index;\r\n}\r\n\r\nfunction minimaxRec(newBoard, player) {\r\n  let availSpots = emptyIndices(newBoard);\r\n\r\n  if (winning(newBoard, \"X\")) return { score: -10 };\r\n  else if (winning(newBoard, \"O\")) return { score: 10 };\r\n  else if (availSpots.length === 0) return { score: 0 };\r\n\r\n  let moves = [];\r\n\r\n  for (let i = 0; i < availSpots.length; i++) {\r\n    let move = {};\r\n    move.index = newBoard[availSpots[i]];\r\n\r\n    newBoard[availSpots[i]] = player;\r\n\r\n    //if collect the score resulted from calling minimaxRec on the opponent of the current player\r\n    move.score = minimaxRec(newBoard, player === \"O\" ? \"X\" : \"O\").score;\r\n\r\n    //reset the spot to empty\r\n    newBoard[availSpots[i]] = move.index;\r\n\r\n    moves.push(move);\r\n  }\r\n\r\n  let bestMove;\r\n  // if it is the computer's turn loop over the moves and choose the move with the highest score\r\n  if (player === \"O\") {\r\n    let bestScore = -10000;\r\n    for (let i = 0; i < moves.length; i++) {\r\n      if (moves[i].score > bestScore) {\r\n        bestScore = moves[i].score;\r\n        bestMove = i;\r\n      }\r\n    }\r\n  }\r\n  // else loop over the moves and choose the move with the lowest score\r\n  else {\r\n    let bestScore = 10000;\r\n    for (let i = 0; i < moves.length; i++) {\r\n      if (moves[i].score < bestScore) {\r\n        bestScore = moves[i].score;\r\n        bestMove = i;\r\n      }\r\n    }\r\n  }\r\n\r\n  // return the chosen move (object) from the array to the higher depth\r\n  return moves[bestMove];\r\n}\r\n\r\nfunction emptyIndices(blocks) {\r\n  return blocks.filter((ch) => ch !== \"O\" && ch !== \"X\");\r\n}\r\n\r\nfunction winning(blocks, player) {\r\n  return (\r\n    (blocks[0] === player && blocks[1] === player && blocks[2] === player) ||\r\n    (blocks[3] === player && blocks[4] === player && blocks[5] === player) ||\r\n    (blocks[6] === player && blocks[7] === player && blocks[8] === player) ||\r\n    (blocks[0] === player && blocks[3] === player && blocks[6] === player) ||\r\n    (blocks[1] === player && blocks[4] === player && blocks[7] === player) ||\r\n    (blocks[2] === player && blocks[5] === player && blocks[8] === player) ||\r\n    (blocks[0] === player && blocks[4] === player && blocks[8] === player) ||\r\n    (blocks[2] === player && blocks[4] === player && blocks[6] === player)\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Board from \"../components/Board\";\r\nimport minimax from \"../util/minimax\";\r\nimport \"./LocalMatch.css\";\r\n\r\nfunction LocalMatch(props) {\r\n  const [blocks, setBlocks] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const onMove = (block) => {\r\n    if (blocks[block] !== \"\") alert(\"Invalid move!\");\r\n    else {\r\n      console.log(\"makeMove\", block);\r\n      blocks[block] = \"X\";\r\n      setBlocks(blocks.slice());\r\n      gameEnd(blocks);\r\n      const AIMove = minimax(blocks);\r\n      console.log(\"AIMove\", AIMove);\r\n      blocks[AIMove] = \"O\";\r\n      setBlocks(blocks.slice());\r\n      gameEnd(blocks);\r\n    }\r\n  };\r\n\r\n  function gameEnd(blocks) {\r\n    const end = checkGameEnd(blocks);\r\n    if (end) setStatus(end);\r\n  }\r\n\r\n  return (\r\n    <div id=\"LocalMatch\" className=\"screen\">\r\n      <h1>VS Computer</h1>\r\n      <em>You can play with THE computer here. Good luck!</em>\r\n\r\n      <div id=\"game-end\">{status}</div>\r\n      {status && (\r\n        <Link className=\"btn home\" to=\"/\">\r\n          Return Home\r\n        </Link>\r\n      )}\r\n      <Board blocks={blocks} disabled={status} onMove={onMove} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction checkGameEnd(blocks) {\r\n  if (winning(blocks, \"X\")) return \"Player X has won!\";\r\n  if (winning(blocks, \"O\")) return \"Player O has won!\";\r\n\r\n  for (let i = 0; i < blocks.length; ++i) if (blocks[i] === \"\") return null;\r\n\r\n  return \"It is a DRAW.\";\r\n}\r\n\r\nfunction winning(blocks, player) {\r\n  return (\r\n    (blocks[0] === player && blocks[1] === player && blocks[2] === player) ||\r\n    (blocks[3] === player && blocks[4] === player && blocks[5] === player) ||\r\n    (blocks[6] === player && blocks[7] === player && blocks[8] === player) ||\r\n    (blocks[0] === player && blocks[3] === player && blocks[6] === player) ||\r\n    (blocks[1] === player && blocks[4] === player && blocks[7] === player) ||\r\n    (blocks[2] === player && blocks[5] === player && blocks[8] === player) ||\r\n    (blocks[0] === player && blocks[4] === player && blocks[8] === player) ||\r\n    (blocks[2] === player && blocks[4] === player && blocks[6] === player)\r\n  );\r\n}\r\n\r\nexport default LocalMatch;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./OnlineMatchInit.css\";\r\n\r\nfunction OnlineMatchInit(props) {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const matchID = generateID();\r\n    history.push(`/online/${matchID}`);\r\n  }, []);\r\n\r\n  function generateID() {\r\n    const possible =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_\";\r\n\r\n    let res = \"\";\r\n    for (let i = 0; i < 5; ++i)\r\n      res += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <div id=\"OnlineMatchInit\" className=\"screen\">\r\n      <h1>Initiating Online Match...</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OnlineMatchInit;\r\n","import { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./JoinMatch.css\";\r\n\r\nfunction JoinMatch(props) {\r\n  const [input, setInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (event) => {\r\n    if (input.length !== 5) return false;\r\n    history.push(`/online/${input}`);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"JoinMatch\" className=\"screen\">\r\n      <h1>Join a Match</h1>\r\n      <em>\r\n        Join an online match and play against your friend or watch them play!\r\n      </em>\r\n\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          id=\"matchID-input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter MatchID (eg. 0-Dx_)\"\r\n          required\r\n          minLength={5}\r\n          maxLength={5}\r\n          onChange={onChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn big-btn join\">\r\n          Join\r\n        </button>\r\n      </form>\r\n      <Link className=\"btn big-btn back\" to=\"/\">\r\n        Return Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinMatch;\r\n","import \"./CopyLogo.css\";\r\n\r\nfunction CopyLogo() {\r\n  return (\r\n    <svg id=\"CopyLogo\" aria-label=\"Copy\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"rgb(239, 231, 224)\"\r\n        stroke-width=\"2\"\r\n        d=\"M9 15h8-8zm0-4h10H9zm0-4h4-4zm7-6v6h6M6 5H2v18h16v-4m4 0H6V1h11l5 5v13z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CopyLogo;\r\n","import \"./CopyLinkLogo.css\";\r\n\r\nfunction CopyLinkLogo() {\r\n  return (\r\n    <svg id=\"CopyLinkLogo\" aria-label=\"Link\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"rgb(239, 231, 224)\"\r\n        stroke-width=\"2\"\r\n        d=\"M16.125 2.42a2.009 2.009 0 0 1 2.84-.001l2.616 2.617a2 2 0 0 1-.001 2.839l-3.705 3.705a2.009 2.009 0 0 1-2.84.001L12.42 8.964a2 2 0 0 1 .001-2.839l3.705-3.705zm-10 10a2.009 2.009 0 0 1 2.84-.001l2.616 2.617a2 2 0 0 1-.001 2.839L7.875 21.58a2.009 2.009 0 0 1-2.84.001L2.42 18.964a2 2 0 0 1 .001-2.839l3.705-3.705zM7 17 17 7\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default CopyLinkLogo;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { io } from \"socket.io-client\";\r\nimport Board from \"../components/Board\";\r\nimport CopyLogo from \"../components/CopyLogo\";\r\nimport CopyLinkLogo from \"../components/CopyLinkLogo\";\r\nimport \"./OnlineMatch.css\";\r\n\r\n/* socket could be\r\n  directly inside component (initialized then and there)\r\n  outside component (initialized inside)\r\n  inside useEffect\r\n  or best inside a separate util file\r\n*/\r\nlet socket;\r\n\r\nfunction OnlineMatch(props) {\r\n  const matchID = props.match.params.matchID;\r\n  const [player, setPlayer] = useState(null);\r\n  const [gameState, setGameState] = useState(null);\r\n  const [gameEnd, setGameEnd] = useState(null);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // io.connect(location.protocol + \"//\" + location.host);\r\n    // can be used with useLocation()\r\n    // socket = io(\"ws://192.168.43.230:3001\", { query: { matchID: matchID } });\r\n    const url = \"ws://\" + window.location.host;\r\n    socket = io(url, { query: { matchID: matchID } });\r\n\r\n    socket.on(\"assignPlayer\", (newPlayer) => {\r\n      console.log(\"assignPlayer\", newPlayer);\r\n      setPlayer(newPlayer);\r\n    });\r\n\r\n    socket.on(\"updateGameState\", (newGameState) => {\r\n      console.log(\"updateGameState\", newGameState);\r\n      setGameState(newGameState);\r\n      if (newGameState.status) setGameEnd(newGameState.status);\r\n    });\r\n\r\n    socket.on(\"playerDisconnected\", (message) => {\r\n      console.log(\"playerDisconnected\", message);\r\n      setGameEnd(message);\r\n    });\r\n\r\n    // clean unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  function onMove(block) {\r\n    if (!player) alert(\"You are a spectator!\");\r\n    else if (gameState.turn !== player) alert(\"Wait for your turn!\");\r\n    else if (gameState.blocks[block] !== \"\") alert(\"Invalid move!\");\r\n    else {\r\n      console.log(\"makeMove\", player, block);\r\n      socket.emit(\"makeMove\", player, block);\r\n    }\r\n  }\r\n\r\n  function copyToClipboard(txt) {\r\n    let ta = document.createElement(\"textarea\");\r\n    ta.value = txt;\r\n    ta.setAttribute(\"readonly\", \"\");\r\n    ta.style.position = \"absolute\";\r\n    ta.style.left = \"-9999px\";\r\n    document.body.appendChild(ta);\r\n    ta.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(ta);\r\n    console.log(`Copied ${txt} to clipboard`);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 5000);\r\n  }\r\n\r\n  function copyToClipboardAlt(txt) {\r\n    navigator.clipboard\r\n      .writeText(txt)\r\n      .then(() => {\r\n        console.log(`Copied ${txt} to clipboard`);\r\n        setCopied(true);\r\n        setTimeout(() => setCopied(false), 5000);\r\n      })\r\n      .catch(() => {\r\n        console.log(`Error copying ${txt}`);\r\n        setCopied(false);\r\n      });\r\n  }\r\n\r\n  if (!gameState) return <h1>Loading gameState...</h1>;\r\n\r\n  // TODO: Clearly display matchID\r\n  return (\r\n    <div id=\"OnlineMatch\" className=\"screen\">\r\n      <h1>\r\n        Online Match room code: {matchID}\r\n        <span id=\"copy\" onClick={() => copyToClipboard(matchID)}>\r\n          <CopyLogo />\r\n        </span>\r\n        <span id=\"copyLink\" onClick={() => copyToClipboard(window.location)}>\r\n          <CopyLinkLogo />\r\n        </span>\r\n        <span id=\"copied\">{copied && \"Copied!\"}</span>\r\n      </h1>\r\n\r\n      {!gameEnd && (\r\n        <div id=\"info\">\r\n          {/* <div id=\"player\">\r\n          You are\r\n          {player ? ` playing as ${player}` : \" a spectator\"}\r\n        </div>\r\n        <div id=\"turn\">Current Turn: {gameState.turn}</div> */}\r\n          It is {gameState.turn === player ? \"your\" : \"opponent's\"} turn\r\n        </div>\r\n      )}\r\n      <div id=\"game-end\">{gameEnd}</div>\r\n      {gameEnd && (\r\n        <Link className=\"btn big-btn back\" to=\"/\">\r\n          Return Home\r\n        </Link>\r\n      )}\r\n\r\n      <Board blocks={gameState.blocks} disabled={gameEnd} onMove={onMove} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OnlineMatch;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./screens/Home\";\nimport NewGame from \"./screens/NewGame\";\nimport LocalMatch from \"./screens/LocalMatch\";\nimport OnlineMatchInit from \"./screens/OnlineMatchInit\";\nimport JoinMatch from \"./screens/JoinMatch\";\nimport OnlineMatch from \"./screens/OnlineMatch\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/new\" component={NewGame} />\n        <Route exact path=\"/local\" component={LocalMatch} />\n        <Route exact path=\"/join\" component={JoinMatch} />\n        <Route exact path=\"/online\" component={OnlineMatchInit} />\n        <Route path=\"/online/:matchID\" component={OnlineMatch} />\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}